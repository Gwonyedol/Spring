<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd">
<!-- 
		IOC 컨테이너 (Spring 전용 메모리 공간) 안에 생성 될  [객체 만들고 조립하는(의존)] 설정
		>> xml 문서 annotation
		>> DI_04.xml
		
		: 제어의 역전 (프로그램의 제어구조를 바꾼다)
		: 작은 단위의 부품을 만들어 놓고, 그것을 조립하는 행위 (레고 블럭처럼)

  		  
      
      
     DI 문법
     <bean id="한개의 이름 (식별자)" name="여러개의 이름 >> 구분자 (,) (공백), (;)"
     ex)
     <bean id="" class="" name="m1,m2 m3;m4"
     
     ** 객체를 생성하고 필요한 객체를 주입
     ** 주입방법  : 생성자 주입 (의무적)
     						 setter 함수 주입 (일반적 : 선택적)
     			
      java 코드
      JobExecute jobexecute = new JobExecute("hong", 100L);
			case: String, String : String, int : String, long      
      
      ArticleDao articledao = new ArticleDao();
      jobexecute.setArticledao(articledao); // setter 주입 (참조값 주입)
      
      jobexecute.setData(500); // setter 주입 (값 주입)
      
 -->
			<bean id="articleDao" class="DI_08_Spring.ArticleDao"></bean>
 			<bean id="jobExecute" class="DI_08_Spring.JobExecute">
 				<constructor-arg><value>hong</value></constructor-arg>
 				<constructor-arg><value type="long">100</value></constructor-arg>
 				<property name="articledao">
 					<ref bean="articleDao"/>
 				</property>
 				
 				<property name="data">
 					<value>500</value>
 				</property>
 			</bean>
 			
 			
</beans>